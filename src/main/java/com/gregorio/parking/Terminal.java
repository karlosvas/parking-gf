package com.gregorio.parking;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.Map;

import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;

import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author rosel
 */
public class Terminal extends javax.swing.JFrame {

    private static final Integer[][] parking=new Integer[3][20];
    private JTable tabla; //Control para mostrar la mastriz de enteros 
    private DefaultTableModel modeloTabla; //Contenedor de la matriz de enteros 
    private JTable tablaTicket; //Control para mostrar la mastriz de enteros 
    private DefaultTableModel modeloTablaTicket; //Contenedor de la matriz de enteros 
    FondoPanel fondo = new FondoPanel();

    public Maquina maquina;

    /**
     * Creates new form Terminal2
     */
    public Terminal(Maquina maquina) {
        this.setContentPane(fondo);
        
        this.maquina = maquina;
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Parking Terminal");
        // Para inicializar con 0 (en vez de null), necesitas hacerlo manualmente
        for (int i = 0; i < parking.length; i++) {
            for (int j = 0; j < parking[i].length; j++) {
                parking[i][j] = 0;
                
            }
        }
        
        mostrarParking();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        generaticket = new javax.swing.JButton();
        retirarvehiculo = new javax.swing.JButton();
        text_matricula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        text_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        text_billete = new javax.swing.JTextField();
        pagar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        scroll_ticket = new javax.swing.JScrollPane();
        parking_esquema = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parking"));

        generaticket.setText("Generar Ticket");
        generaticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaticketActionPerformed(evt);
            }
        });

        retirarvehiculo.setText("Retirar Vehiculo");
        retirarvehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarvehiculoActionPerformed(evt);
            }
        });

        text_matricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_matriculaActionPerformed(evt);
            }
        });

        jLabel1.setText("Matricula:");

        text_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_idActionPerformed(evt);
            }
        });

        jLabel2.setText("ID:");

        jLabel3.setText("Dinero:");

        pagar.setText("Pagar");
        pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarActionPerformed(evt);
            }
        });

        eliminar.setIcon(new javax.swing.ImageIcon("src/main/resources/papelera.png"));
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(retirarvehiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addGap(55, 55, 55))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generaticket)
                    .addComponent(pagar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eliminar)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(text_matricula, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(text_id, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(text_billete))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generaticket)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_matricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_billete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(14, 14, 14)
                .addComponent(retirarvehiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parking_esquema, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(scroll_ticket, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(scroll_ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addComponent(parking_esquema, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generaticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaticketActionPerformed
        Ubicacion u=new Ubicacion(0,0);
        int id = 0;

        boolean encontrado=false;
        for (int y = 0; y < parking.length; y++) {
             
            for (int x = 0; x < parking[y].length; x++) {
                
                if (parking[y][x] == 0 && encontrado==false) {
                    u=new Ubicacion(y,x);
                    id = parking[y][x] = this.generarIdParking(x, y);
                    encontrado=true;
                    
                }
            }
        }

        // Este método devuelve el tiket
        Ticket ticketmostrar=maquina.generarTiket(id, this.text_matricula.getText(), LocalDateTime.now(), u);
        mostrarParking();
        mostrarTicket(ticketmostrar);
    }//GEN-LAST:event_generaticketActionPerformed
    
    private int generarIdParking(int x,int y){
       return y*20+x+1; 
    }
    
    private void retirarvehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarvehiculoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retirarvehiculoActionPerformed

    private void text_matriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_matriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_matriculaActionPerformed

    private void text_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_idActionPerformed

    private void pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void mostrarParking() {

        //configuramos los titulos de las columnas del JTable
        String[] titulosColumnas = new String[parking[0].length];
        Arrays.fill(titulosColumnas, "");
        //creamos el modelo de datos
        modeloTabla = new DefaultTableModel(parking, titulosColumnas);
        //creamos el JTable con ese modelo

        tabla = new JTable(modeloTabla);
        //Ocultamos el encabezado 
        tabla.getTableHeader().setVisible(false);

        tabla.getTableHeader().setPreferredSize(new Dimension(0, 0));
        //damos al scroll el JTable para que se vea
        this.parking_esquema.setViewportView(tabla);
        //Para hacer como un refresco de la vista
        this.repaint();

    }
    
    private void mostrarTicket(Ticket ticket){
        System.out.println("Ticket: " + ticket);
        Map<String, String> titulosList = new HashMap<>();
        titulosList.put("ID", String.valueOf(ticket.getId()));
        titulosList.put("Matricula", ticket.getMatricula());
        titulosList.put("Ubicación", ticket.getUbicacion().toString());
        // Fechas LocalDate
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        titulosList.put("Fecha Entrada", ticket.getFechaHoraEntrada().format(formatter));
         
        String[] titulos = new String[titulosList.size()];    
        
        int i = 0;
        for (String t : titulosList.keySet())
            titulos[i++] = t;
        
        String[][] contenidoTicket= new String[1][titulosList.size()];
        int index = 0;
        for (String key : titulosList.keySet()) 
            contenidoTicket[0][index++] = titulosList.get(key);

        //creamos el modelo de datos
        modeloTablaTicket = new DefaultTableModel(contenidoTicket, titulos);

        //creamos el JTable con ese modelo
        tablaTicket = new JTable(modeloTablaTicket);
        tablaTicket.getTableHeader().setPreferredSize(new Dimension(50, 35));
         // Center the header text
        ((DefaultTableCellRenderer) tablaTicket.getTableHeader().getDefaultRenderer())
            .setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        

        //damos al scroll el JTable para que se vea
        this.scroll_ticket.setViewportView(tablaTicket);

        //Para hacer como un refresco de la vista
        this.repaint();
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminar;
    private javax.swing.JButton generaticket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton pagar;
    private javax.swing.JScrollPane parking_esquema;
    private javax.swing.JButton retirarvehiculo;
    private javax.swing.JScrollPane scroll_ticket;
    private javax.swing.JTextField text_billete;
    private javax.swing.JTextField text_id;
    private javax.swing.JTextField text_matricula;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel {
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            imagen = new ImageIcon("src/main/resources/fondo1.jpg").getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
